# Upstream configuration for the Node.js app
upstream app {
    server app:3000;
    keepalive 64;
}

# HTTP server configuration - redirects to HTTPS when enabled
server {
    listen 80;
    listen [::]:80;
    server_name _;  # Replace with your domain in production

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;

    # Proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    # Handle HTML files
    location ~ ^/([a-zA-Z0-9_-]+\.html)?$ {
        proxy_pass http://app;
        access_log off;
    }

    # Handle root path
    location = / {
        proxy_pass http://app;
        access_log off;
    }

    # Main location block for application routes
    location / {
        proxy_pass http://app;
        proxy_buffering off;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Static assets with caching
    location /public/ {
        proxy_pass http://app;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Admin area
    location /admin/ {
        proxy_pass http://app;
    }

    # Health check endpoint
    location /health {
        access_log off;
        proxy_pass http://app;
    }

    # Security for hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# HTTPS server configuration
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _;  # Replace with your domain when in production
#
    # SSL configuration
    # For Docker development environment (with mounted certificates)
    ssl_certificate /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;

    # For production server with system certificates
    # ssl_certificate /etc/ssl/certs/cert.pem;
    # ssl_certificate_key /etc/ssl/private/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    # Comment these out if using self-signed certificates
    # ssl_stapling on;
    # ssl_stapling_verify on;
#
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options SAMEORIGIN;
#
    # Proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
#
    # Handle HTML files
    location ~ ^/([a-zA-Z0-9_-]+\.html)?$ {
        proxy_pass http://app;
        access_log off;
    }

    # Handle root path
    location = / {
        proxy_pass http://app;
        access_log off;
    }

    # Main location block for application routes
    location / {
        proxy_pass http://app;
        proxy_buffering off;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Static assets with caching
    location /public/ {
        proxy_pass http://app;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Admin area
    location /admin/ {
        proxy_pass http://app;
    }

    # Health check endpoint
    location /health {
        access_log off;
        proxy_pass http://app;
    }

    # Security for hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}